..!interpreter english NOABBREV DECLARATION
.. easy2lg - generiert
.. Copyright (c) 1990-2015  abas Software AG
.. Generated by Udo Hîfling, abas GmbH & Co. KG
.. at 2015-11-09, 16:02
.. file: \\magellan.abasag.intra\gmbhspx\2015r4\owfw1\is.bdeimport.spx
..
..  owfw1/IS.BDEIMPORT
..
.. kopf
.set Trans -
..@@BEGINHEAD
..========================================================================
..==
..==  Name               : IS.BDEIMPORT
..==
..==  Pfad               : owfw1
..==
..==  Language/Sprache   : ENGLISH
..==  Possible Languages : GERMAN | ENGLISH
..==
..==  Interpreteroptionen: NOABBREV DECLARATION
..==  Possible Options   : [DECLARATION] [ENGLVAR] [TRANSLATE]
..==
..==
..==  Funktion           :
..==
..==
..==  Erstellungsdatum   :
..==
..==  Autor              : abas GmbH & Co. KG
..==                       Udo Hîfling
..==  Menuepunkte        :
..==
..==  Maskenprioritaet
..==  bei EFOP           :
..==
..==  Besonderheiten     :
..==
..==
..==
..==
..==
..==  Aenderungshistorie :
..==
..========================================================================
..@@ENDHEAD
..
.. standard programs
.input ARB            ? _F|defined(U|xarb)
..
..  .input DEFAULT.INI    ? _F|defined(U|xyservice)
..
.. include owfw1/SUB.BDE.RUECKMELDEN
.. include owfw1/FREIE.BS
..
.input KKOMNAME.KONST
.input KDATNAME.KONST
.input KAKTNAME.KONST
..  .input OP.STATUS.SET ? F|fileexists("OP.STATUS.SET")
..
.. variable definitions
..@@BEGINVARDEFS
..====================================================
..... procedure stack pointer .....
.type integer    U|xprocsp                  ? _F|defined(U|xprocsp)
.type integer    U|xIdummy                  ? _F|defined(U|xIdummy)
.type text       U|xTdummy                  ? _F|defined(U|xTdummy)
.type realx      U|xRdummy                  ? _F|defined(U|xRdummy)
..
.type text       U|xTsys                    ? _F|defined(U|xTsys)
.type text       U|xTmeldung                ? _F|defined(U|xTmeldung)
.type text       U|xTsubeg                  ? _F|defined(U|xTsubeg)
..
.type bool      xBmehr                  ? _F|defined(U|xBmehr)
.type text      xTzugriff               ? _F|defined(U|xTzugriff)
.type text      xyTpasswort             ? _F|defined(U|xyTpasswort)
.type R1.6      xR6dummy                ? _F|defined(U|xR6dummy)
.type bool      xBfehler                ? _F|defined(U|xBfehler)
.type text      xTsel                   ? _F|defined(U|xTsel)
.type bool      xBstatus                ? _F|defined(U|xBstatus)
.type integer   xInochfrei              ? _F|defined(xInochfrei)
..
.type text      xTsavedat               ? _F|defined(xTsavedat)
.type text      xTnull                  ? _F|defined(xTnull)
.type text      xTmonat                 ? _F|defined(xTmonat)
..
.type text      xTtempfile              ? _F|defined(U|xTtempfile)
.type text      xTzeile                 ? _F|defined(U|xTzeile)
..
.type text      xTbaNummer              ? _F|defined(U|xTbaNummer)
.type text      xTmaNummer              ? _F|defined(U|xTmaNummer)
.type text      xTmgrNummer             ? _F|defined(U|xTmgrNummer)
..
.type   Z       U|xZdummy               ? _F|defined(U|xZdummy)
..
.type text      U|xTbuZeit              ? _F|defined(U|xTbuZeit)
.type text      U|xTbeginnZeit          ? _F|defined(U|xTbeginnZeit)
.type text      U|xTbeginnDatum         ? _F|defined(U|xTbeginnDatum)
.type text      U|xTbuDatum             ? _F|defined(U|xTbuDatum)
..
.type real      xRrmZeit                ? _F|defined(U|xRrmZeit)
.type real      xRzeitanzauf            ? _F|defined(U|xRzeitanzauf)
.type real      xRmaschZeit             ? _F|defined(U|xRmaschZeit)
..
.type text      xTjahr                  ? _F|defined(U|xTjahr)
.type text      xTmonat                 ? _F|defined(U|xTmonat)
.type text      xTtag                   ? _F|defined(U|xTtag)
.type text      xTdatum                 ? _F|defined(U|xTdatum)
..
.type text      xT0                     ? _F|defined(U|xT0)
.type text      xT1                     ? _F|defined(U|xT1)
.type text      xT2                     ? _F|defined(U|xT2)
.type text      xT3                     ? _F|defined(U|xT3)
.type text      xT4                     ? _F|defined(U|xT4)
..
.type text      xTedp               ? _F|defined(U|xTedp)
.type text      xTedpOUT            ? _F|defined(U|xTedpOUT)
.type text      xTedpERR            ? _F|defined(U|xTedpERR)
..
..====================================================
..@@ENDVARDEFS
..
.. initialize procedure stack pointer
..FORMEL xprocsp = 0
..
.. ----------------------------------------
.continue EPROCDEF
.. procedure definitions
!EPROCDEF: ----- end procedure definitions -----
.. ----------------------------------------
..
..
.continue EL001 ? _(F|fileexists("INI.BDE"))
.. IF001
.input INI.BDE
..
.continue FI001
!EL001
.text U|xTmeldung 'G|bspri' Datei {1} nicht vorhanden!
.formula U|xTmeldung = F|formatstr(U|xTmeldung,"INI.BDE")
.error 'U|xTmeldung'
..  .cursor
.end 2
..
!FI001
..
.. --------------------   BLOCK  --------------------
.. 06.10.2015 Hoe  Zugriff auf ZDB aufbauen
..
.continue EL002 ? _(F|fileexists("owfw1/FWCONFIG.1.CFG"))
.. IF002
.input owfw1/FWCONFIG.1.CFG
..
.continue FI002
!EL002
.text U|xTmeldung 'G|bspri' Datei {1} nicht vorhanden!
.formula U|xTmeldung = F|formatstr(U|xTmeldung,"owfw1/FWCONFIG.1.CFG")
.error 'U|xTmeldung'
..  .cursor
.end 2
..
!FI002
..
.. -------------------- ENDBLOCK --------------------
..
..
.continue EL003 ? _(F|fileexists("owfw1/FREIE.BS"))
.. IF003
.input owfw1/FREIE.BS
..
.continue FI003
!EL003
.formula xInochfrei = 2
..
!FI003
..
..
.. =====   CASE001   =====
.continue BRK001 ? _(G|evtvar = "yimport")
..
.continue EL004 ? _(U|xInochfrei > 1)
.. IF004
.. IMPORT NEUE DATEN
..
.continue EL005 ? _(M|yimportfile = "")
.. IF005
.formula M|yimportfile = U|xyTimportfile
..
!EL005
.. FI005
..
.formula U|xTtempfile = "tmp/XBDEIMPORT" + 'G|pid' + ".TMP"
..
.. --------------------   BLOCK  --------------------
.. fÅr das Anlegen einer Sicherungsdatei, Aufbau Jahr + Monat
.formula  U|xTdummy   = 'G|datum'
.formula  U|xTsavedat = "owbde/BDEIMP." + 'F|year(U|xTdummy)'
.formula  U|xTnull    = "00"
.formula  U|xTmonat   = U|xTnull + 'F|month(U|xTdummy)'
.formula  U|xTmonat   = U|xTmonat >> 2
.formula  U|xTsavedat = U|xTsavedat + U|xTmonat
..
.. -------------------- ENDBLOCK --------------------
..
.make Screen Line --
..
..  Feld Status zurÅcksetzen
.formula M|ystatus = ""
..
..  Testen, ob es eine Importdatei Åberhaupt gibt
.formula U|xTsys = "test -s " + U|xyTimportfile
.system 'U|xTsys' Background
..
..
.continue EL006 ? _(G|mehr)
.. IF006
.. Neuer DATENSATZ in ZD oder bestehenden erweitern?
.formula xTsel = "$,,term==" + 'G|datum' + ";@ablageart=(Active);@gruppe=" + U|xyTzdbGruppe
..
.select 'G|hdatname.U|xyTzdbNummer' LOCK 'U|xTsel'
..
..
.continue EL007 ? _(G|mehr)
.. IF007
..
.continue EL008 ? _(G|gesperrt)
.. IF008
.formula U|xBmehr = G|mehr
..
.continue FI008
!EL008
.formula U|xBmehr = G|false
..
!FI008
..
.continue FI007
!EL007
.formula xtzugriff = "make " + 'G|hdatname.U|xyTzdbNummer' + " GROUP" + U|xyTzdbGruppe
..   + " IMP"+'T|datum'
.'xtzugriff'
..
.formula H|such = "IMP" + 'G|datum'
.formula H|term = G|datum
.formula U|xBmehr = G|mehr
..
!FI007
..
..
.continue EL009 ? _(U|xBmehr)
.. IF009
..
.continue EL010 ? _(U|xyBimportdel)
.. IF010
.formula U|xtsys = "mv " + M|yimportfile + " " + U|xTtempfile
..
.continue FI010
!EL010
.formula U|xTsys = "cp " + M|yimportfile + " " + U|xTtempfile
..
!FI010
..
.system 'U|xTsys' Background
..
.. --------------------   BLOCK  --------------------
.. Sicherungsdatei je Monat anlegen
.formula xTsys = "cat " + U|xTtempfile  + " >> " + U|xTsavedat
.system 'U|xTsys' Background
..
.formula U|xTsys = "crlf+ " + U|xTsavedat
.system 'U|xTsys' Background
..
.. -------------------- ENDBLOCK --------------------
..
.. --------------------   BLOCK  --------------------
.. I-File "owfw1/BDE.IMPORT.KOPF"
..
.continue EL011 ? _(F|fileexists("owfw1/BDE.IMPORT.KOPF"))
.. IF011
.input "owfw1/BDE.IMPORT.KOPF"
..
!EL011
.. FI011
..
.. -------------------- ENDBLOCK --------------------
..
.formula U|xTsys = "test -s " + U|xTtempfile
.system 'U|xTsys' Background
..
..
.continue EL012 ? _(G|mehr)
.. IF012
.select from 'U|xTtempFile' U|xTzeile^
..
..
!LOOP001: ==============================
.continue ELOP001 ? _(G|mehr)
.make Screen Line +o
..
..  Ganze Zeile erst einmal schreiben
.formula  M|ysatz    = T|xtzeile
..
.. 1. Satztyp
.formula  M|ysatztyp = U|xTzeile << "#"
.formula  U|xTzeile  = U|xTzeile >> "#"
..
.. 2. Mandant
.formula  M|ymandant = U|xtzeile<<"#"
.formula  U|xtzeile  = U|xtzeile>>"#"
..
.. --------------------   BLOCK  --------------------
.. 3. BA-Nummer
.formula  U|xIdummy = U|xTzeile<<"#"
.formula  U|xTzeile = U|xTzeile>>"#"
..Zahl umladen um die fÅhrenden Nullen weg zu bekommen
.formula  U|xTbaNummer = 'U|xIdummy'
..
.. -------------------- ENDBLOCK --------------------
..
.. --------------------   BLOCK  --------------------
.. 4. Maschinengruppe
.formula  U|xIdummy = U|xTzeile << "#"
.formula  U|xTzeile = U|xTzeile >> "#"
..
..Zahl umladen um die fÅhrenden Nullen weg zu bekommen
.formula  U|xTmgrNummer = 'U|xIdummy'
..
.. -------------------- ENDBLOCK --------------------
..
.. --------------------   BLOCK  --------------------
.. 5. Mitarbeiter
.formula  U|xIdummy = U|xTzeile << "#"
.formula  U|xTzeile = U|xTzeile >> "#"
..
..Zahl umladen um die fÅhrenden Nullen weg zu bekommen
.formula  U|xTmaNummer = 'U|xIdummy'
..
.. -------------------- ENDBLOCK --------------------
..
.. 6. Beginndatum
.formula  U|xTbeginnDatum = U|xTzeile << "#"
.formula  U|xTzeile       = U|xTzeile >> "#"
..
..
.. 7. Beginnzeit
.formula  U|xTbeginnZeit = T|xTzeile << "#"
.formula  U|xTzeile      = T|xTzeile >> "#"
..
..
.. --------------------   BLOCK  --------------------
.. 8. Buchungsdatum
.formula  U|xTbuDatum = U|xTzeile << "#"
.formula  U|xTzeile   = U|xTzeile >> "#"
..
..
.. -------------------- ENDBLOCK --------------------
..
.. 9. Buchungszeit
.formula U|xTbuZeit = U|xTzeile << "#"
.formula U|xTzeile  = U|xTzeile >> "#"
..
..
.. 10. Personalzeit
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula U|xRrmZeit = U|xTdummy
..
.formula M|yrmzeit = xRrmZeit
..
.. 11. get. Zeitwert Std. / Anz.AuftrÑge) (5.2)
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula U|xRzeitanzauf = U|xTdummy
..
.formula M|yzeitanzauf = U|xRzeitanzauf
..
.. 12. ges. Zeitwert  Std.(Maschinenzeit)
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula U|xRmaschZeit = U|xTdummy
..
.formula M|yzeitmasch = U|xRmaschZeit
..
.. 13. Anzahl offene AuftrÑge
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula U|xIdummy = U|xTdummy
..
.formula M|yanzoauf = U|xIdummy
..
.. 14. Gewichtungsfaktor
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"

.formula  U|xR6dummy = U|xTdummy
.formula  M|ygewfakt = U|xR6dummy
..
.. 15. Gutmenge
.formula  U|xTdummy = U|xTzeile << "#"
.formula  U|xTzeile = U|xTzeile >> "#"
..
..  .formula  U|xRdummy = U|xTdummy
.formula  M|ymge    = F|tovalue('U|xTdummy',"R7.2")
..
.. 16. Ausschussmenge
.formula  U|xTdummy = U|xTzeile << "#"
.formula  U|xTzeile = U|xTzeile >> "#"
..
.formula  U|xRdummy    = U|xTdummy
.formula  M|yausschuss = U|xRdummy
..
.. 17. Ausschussgrund (falls vorhanden)
.formula  U|xTdummy   = U|xTzeile << "#"
.formula  U|xTzeile   = U|xTzeile >> "#"
..
.formula  M|yausgrund = U|xTdummy
..
.. Booking-ID
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula  M|ybookid = U|xTdummy
..
.. Globale Referenznr
.formula U|xTdummy = U|xTzeile << "#"
.formula U|xTzeile = U|xTzeile >> "#"
..
.formula  M|ysatznum = U|xTdummy
..
..
.continue EL013 ? _(M|ybookid <> "")
.. IF013
.formula U|xTsel = "$,,ybookid==" + 'M|ybookid' + ";@ablageart=(Active)"
.formula U|xTsel = U|xTsel + ";@gruppe=" + U|xyTzdbGruppe
..
.load 0 'G|hdatname.U|xyTzdbNummer' 'U|xTsel'
..
..
.continue EL014 ? _(G|mehr)
.. IF014
.formula  M|yfehler = G|true
.text U|xTdummy 'G|bspri' Dieser Satz wurde schon einmal importiert
.formula  M|yfinfo = U|xTdummy
..
!EL014
.. FI014
..
!EL013
.. FI013
..
..  Hier kînnen die einzelnen Datums- und zeitwerte umgesetzt werden
..
.. --------------------   BLOCK  --------------------
.. I-File "owfw1/BDE.IMPORT.ZEILE"
..
.continue EL015 ? _(F|fileexists("owfw1/BDE.IMPORT.ZEILE"))
.. IF015
.input "owfw1/BDE.IMPORT.ZEILE"
..
!EL015
.. FI015
..
.. -------------------- ENDBLOCK --------------------
..
.. BA/AS PrÅfung
..
.continue EL016 ? _(U|xTbaNummer <> "")
.. IF016
.load 0 'G|hdatname.U|kodatBETRAUFTRAG' NOLOCK 'U|xTbaNummer'
..
..
.continue EL017 ? _(G|mehr)
.. IF017
.formula M|ynummer = 0|id
..
.continue FI017
!EL017
.formula M|yfehler = G|true
.text U|xTdummy 'G|bspri' BA/AS nicht gefunden
.formula M|yfinfo  = U|xTdummy
..
!FI017
..
.continue FI016
!EL016
.formula  M|yfehler = T|true
.text U|xTdummy 'G|bspri' Keine BA-Nummer verfÅgbar
.formula  M|yfinfo = U|xTdummy
..
!FI016
..
.. MGR PrÅfen
..
.continue EL018 ? _(xTmgrNummer <> "")
.. IF018
.load 0 'G|hdatname.U|kodatKAPAZITAET' NOLOCK 'xTmgrNummer'
..
..
.continue EL019 ? _(G|mehr)
.. IF019
.formula M|ymgr = 0|id
..
.continue FI019
!EL019
.formula M|yfehler = G|true
.text U|xTdummy 'G|bspri' MGR nicht gefunden
.formula M|yfinfo  = U|xTdummy
..
!FI019
..
.continue FI018
!EL018
.formula M|yfehler = G|true
.text U|xTdummy 'G|bspri' Keine MGR verfÅgbar
.formula M|yfinfo  = UxTdummy
..
!FI018
..
.. Mitarbeiter prÅfen
..
.continue EL020 ? _(xTmaNummer <> "")
.. IF020
.formula U|xTsubeg = U|xTmaNummer
..
..
.continue EL021 ? _(U|xyImastellen > 0)
.. IF021
.formula  U|xTnull  = "00000000000000000000"
.formula  U|xTsubeg = (U|xTnull + U|xTmaNummer) >> U|xyImastellen
..
!EL021
.. FI021
..
.load 0 'G|hdatname.U|kodatMITARBEITER' NOLOCK 'U|xTsubeg'
..
..
.continue EL022 ? _(G|mehr)
.. IF022
.formula M|ymitarb = 0|id
..
.continue FI022
!EL022
.formula M|yfehler = G|true
.text U|xTdummy 'G|bspri' Mitarbeiter nicht gefunden
.formula M|yfinfo  = U|xTdummy
..
!FI022
..
.continue FI020
!EL020
.formula M|yfehler = G|true
.text U|xTdummy 'G|bspri' Kein Mitarbeiter verfÅgbar
.formula M|yfinfo  = U|xTdummy
..
!FI020
..
.formula  M|ybegdat  = U|xTbeginnDatum
.formula  M|ybegzeit = U|xTbeginnZeit
.formula  M|ybudat   = U|xTbuDatum
.formula  M|ybuzeit  = U|xTbuZeit
..
.. DATENSATZ in ZD beschreiben
.make Line +
.formula H|ysatznum   = M|ysatznum
.formula H|yfehler    = M|yfehler
.formula H|ysatz      = M|ysatz
.formula H|ysatztyp   = M|ysatztyp
.formula H|ymandant   = M|ymandant
.formula H|ynummer    = M|ynummer^nummer
.assign  H|ymgr       = M|ymgr
.assign  H|ymitarb    = M|ymitarb
.formula H|ybudat     = M|ybudat
.formula H|ybuzeit    = M|ybuzeit
.formula H|yrmzeit    = M|yrmzeit
.formula H|ymge       = M|ymge
.formula H|yausschuss = M|yausschuss
.formula H|yoffen     = M|yoffen
.formula H|yfinfo     = M|yfinfo
..
.formula H|ybegdat     = M|ybegdat
.formula H|ybegzeit    = M|ybegzeit
.formula H|yzeitanzauf = M|yzeitanzauf
.formula H|yzeitmasch  = M|yzeitmasch
.formula H|yanzoauf    = M|yanzoauf
.formula H|ygewfakt    = M|ygewfakt
.formula H|yausgrund   = M|yausgrund
.formula H|ybookid     = M|ybookid
..
.select from 'U|xTtempFile' U|xTzeile^
..
.continue LOOP001
!ELOP001: ==============================
..
.rewrite
..
.continue FI012
!EL012
.text U|xTdummy 'G|bspri' Fehler beim Kopieren/Verschieben der öbergabedatei
.formula M|ystatus = U|xTdummy
..
!FI012
..
.continue FI009
!EL009
.text U|xTdummy 'G|bspri' Zugriff auf Zusatzdatei nicht erfolgreich!
.formula M|ystatus = U|xTdummy
..
!FI009
..
.continue FI006
!EL006
.text U|xTdummy 'G|bspri' Keine öbergabedatei vorhanden
.formula M|ystatus = U|xTdummy
..
!FI006
..
.continue FI004
!EL004
.text U|xT1 'G|bspri' Fehler Lizenz fÅr BDE-Daten nicht ausreichend!
.text U|xT2 'G|bspri' Es sind nur {1} noch verfÅgbar.
.formula U|xT2 = F|formatstr(U|xT2,'U|xInochfrei')
..
.text U|xT3 'G|bspri' BDE-Daten manuell einlesen?!
..
..
.output addedto "ADM.FEHL"
..
.input  DATEI.F
'U|xT1'
=======
'U|xT2'
'U|xT3'
=======
.output
.formula U|xTsys = "lizinfo.sh -u >> ADM.FEHL"
.system 'U|xTsys' Background
..
..
.continue EL023 ? _(_(G|batchmode))
.. IF023
.text U|xT1 'G|bspri' Es wurde eine Administrations-Meldung erstellt.
.text U|xT2 'G|bspri' Anzahl freier Lizenzen {1} ist nicht ausreichend!
.formula U|xT2 = F|formatstr(U|xT2,'U|xInochfrei')
..
.BOX
'U|xT1'
'U|xT2'
..
!EL023
.. FI023
..
!FI004
..
.continue ESAC001
!BRK001
.continue BRK002 ? _(G|evtvar = "yrueckmeld")
.input "owfw1/SUB.BDE.RUECKMELDEN"
..
.continue ESAC001
!BRK002
!ESAC001: =====   ENDCASE   =====
..
.continue
..
